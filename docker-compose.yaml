services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres-server
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis-server
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  celery:
    build: .
    container_name: celery-worker
    command: celery -A django_project worker -l info
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=django_project.settings
    restart: on-failure

  django:
    build: .
    container_name: django-app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=django_project.settings
    restart: on-failure

  migration:
    build: .
    container_name: django-migration
    command: >
      sh -c "python manage.py makemigrations &&
         python manage.py migrate &&
         python manage.py shell -c \"from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(username='demo').exists() or User.objects.create_user('demo', 'demo@example.com', 'demo@123')\""
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=django_project.settings

volumes:
  postgres-data:
  redis-data:
